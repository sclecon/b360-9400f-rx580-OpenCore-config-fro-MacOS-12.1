
***FadtEnableReset
Type: plist boolean

Description: Provide reset register and flag in FADT table to enable reboot and shutdown.

Mainly required on legacy hardware and a few newer laptops. Can also fix power-button shortcuts. Not recommended unless required.
----
类型：plist布尔值

描述：在FADT表中提供复位寄存器和标志，以实现重启和关机。

主要是在传统硬件和一些较新的笔记本上需要。也可以修复电源按钮的快捷方式。除非需要，否则不建议使用。


***NormalizeHeaders
Description: Cleanup ACPI header fields to workaround macOS ACPI implementation flaws that result in boot crashes. 

Reference: Debugging AppleACPIPlatform on 10.13 by Alex James (also known as theracermaster). 

The issue was fixed in macOS Mojave (10.14).
----
描述：清理 ACPI 头部字段，以解决 macOS ACPI 实施缺陷导致的启动崩溃问题。

参考文献: Debugging AppleACPIPlatform on 10.13 by Alex James (other known as theracermaster). 

这个问题在macOS Mojave (10.14)中得到了修复。


***SystemProductName
Type: plist string
Failsafe: Empty (OEM specified or not installed)
Description: Refer to SMBIOS SystemProductName.
----
类型：plist字符串
失效保护：空(OEM指定或未安装)
描述：参考SMBIOS SystemProductName。

***HibernateMode
Type: plist string
Failsafe: None
Description: Hibernation detection mode. The following modes are supported:
• None — Ignore hibernation state.
• Auto — Use RTC and NVRAM detection.
• RTC — Use RTC detection.
• NVRAM — Use NVRAM detection.
Note: If the firmware can handle hibernation itself (valid for Mac EFI firmware), then None should be specified to hand-off hibernation state as is to OpenCore.
----
类型：plist字符串
失效保护：空(OEM指定或未安装) 
描述：休眠检测模式。
支持以下模式。
- None - 忽略休眠状态。
- Auto - 使用RTC和NVRAM检测。
- RTC - 使用RTC检测。
- NVRAM - 使用NVRAM检测。
注意：如果固件可以自己处理休眠（对Mac EFI固件有效），那么应该指定None，以便将休眠状态原封不动地交给OpenCore。

// Kernel Quirks
***DisableRtcChecksum
Type: plist boolean
Failsafe: false
Requirement: 10.4

Description: Disables primary checksum (0x58-0x59) writing in AppleRTC.

Note 1 : This option will not protect other areas from being overwritten, see RTCMemoryFixup kernel extension if this is desired.
Note 2 : This option will not protect areas from being overwritten at firmware stage (e.g. macOS bootloader), see AppleRtcRam protocol description if this is desired.
----
类型：plist布尔值
失败保护: false
要求：10.4

描述：禁用AppleRTC中的主校验和（0x58-0x59）写入。

注1：该选项不会保护其他区域被覆盖，如果需要，请看RTCMemoryFixup内核扩展。
注2 : 该选项不会保护在固件阶段(如macOS bootloader)被覆盖的区域，如果需要，请看AppleRtcRam协议描述。

***ExtendBTFeatureFlags
Type: plist boolean
Failsafe: false
Requirement: 10.8-11

Description: Set FeatureFlags to 0x0F for full functionality of Bluetooth, including Continuity.
	
Note: This option is a substitution for BT4LEContinuityFixup.kext, which does not function properly due to late patching progress.
----
类型：plist布尔值
失败保护: false
要求：10.8-11

描述：设置FeatureFlags为0x0F以获得蓝牙的全部功能，包括Continuity。
	
注意: 这个选项是BT4LEContinuityFixup.kext的替代品，由于补丁进度较晚，它不能正常工作。

***ExternalDiskIcons
Type: plist boolean
Failsafe: false
Requirement: 10.4

Description: Apply icon type patches to AppleAHCIPort.kext to force internal disk icons for all AHCI disks.

Note: This option should be avoided whenever possible. Modern firmware typically have compatible AHCI controllers.
----
类型：plist布尔值
失败保护: false
要求：10.4

描述：对AppleAHCIPort.kext应用图标类型补丁，强制所有AHCI磁盘的内部磁盘图标。

注意：应该尽可能避免使用这个选项。现代固件通常有兼容的AHCI控制器。

***ForceSecureBootScheme
Type: plist boolean
Failsafe: false
Requirement: 11
Description: Force x86 scheme for IMG4 verification.
	
Note: This option is required on virtual machines when using SecureBootModel different from x86legacy.
----
类型：plist布尔值
失败保护: false
要求：11
描述：为IMG4验证强制使用x86方案。
	
注意: 当使用不同于x86legacy的SecureBootModel时，在虚拟机上需要这个选项。


***Cpuid1Mask
Type: plist data, 16 bytes
Failsafe: All zero
Description: Bit mask of active bits in Cpuid1Data.

When each Cpuid1Mask bit is set to 0, the original CPU bit is used, otherwise set bits take the value of Cpuid1Data.
----

类型：plist数据，16字节
失效保护：全部为零
描述：Cpuid1Data中活动位的位掩码。

当每个Cpuid1Mask位被设置为0时，使用原来的CPU位，否则设置的位取Cpuid1Data的值。


***MaxKernel
Type: plist string
Failsafe: Empty

Description: Emulates CPUID and applies DummyPowerManagement on specified macOS version or older.

Note: Refer to the Add MaxKernel description for matching logic.
----
类型：plist字符串
失败保护：空

描述：仿真CPUID并在指定的macOS版本或更高版本上应用DummyPowerManagement。

注意：请参考添加MaxKernel描述的匹配逻辑。



***MinKernel
Type: plist string
Failsafe: Empty

Description: Emulates CPUID and applies DummyPowerManagement on specified macOS version or newer.

Note: Refer to the Add MaxKernel description for matching logic.
----
类型：plist字符串
失败保护：空

描述：在指定的macOS版本或更新版本上模拟CPUID并应用DummyPowerManagement。

注意：请参考添加MaxKernel描述的匹配逻辑。


***EnableVmx
Type: plist boolean
Failsafe: false
Description: Enable Intel virtual machine extensions.
Note: Required to allow virtualization in Windows on some Mac hardware. VMX is enabled or disabled and locked by BIOS before OpenCore starts on most firmware. Use BIOS to enable virtualization where possible.
----
类型：plist布尔值
失败保护：false
描述：启用英特尔虚拟机扩展。
注意：需要在某些Mac硬件上允许在Windows中进行虚拟化。在大多数固件的OpenCore启动之前，VMX被BIOS启用或禁用并锁定。在可能的情况下使用BIOS来启用虚拟化。

***AudioOutMask
Type: plist integer
Failsafe: 0
Description: Bit field indicating which output channels to use for UEFI sound.
This should typically contain a single bit corresponding to the green out of the builtin analog audio controller (HDEF). The number of available output nodes (N) for each HDA codec is shown in the debug log (marked in bold-italic):
OCAU: 1/3 PciRoot(0x0)/Pci(0x1,0x0)/Pci(0x0,0x1)/VenMsg(<redacted>,00000000) (4 outputs)
OCAU: 2/3 PciRoot(0x0)/Pci(0x3,0x0)/VenMsg(<redacted>,00000000) (1 outputs)
OCAU: 3/3 PciRoot(0x0)/Pci(0x1B,0x0)/VenMsg(<redacted>,02000000) (7 outputs)
The first available output node is bit 0 (value 1), the second node is bit 1 (value 2), etc.
When the debug version of AudioDxe is used, then additional information on each output channel of each codec is logged during driver binding. Further information on the available output channels may also be found from a Linux codec dump cat /proc/asound/card{n}/codec#{m}.
Using AudioOutMask, it is possible to play sound to more than one channel (e.g. main speaker plus bass speaker;
headphones plus speakers). For example, if the main speaker is ouput 0 and the bass speaker is output 2, then to play to both set AudioOutMask to 1 « 0 + 1 « 2 i.e. 5. This feature is supported when all chosen outputs support the sound file format in use; if any do not then no sound will play and an error will be logged.
Note 1 : If all available output channels on the codec support the available sound file format, then a value of -1 may be used to play to all channels simultaneously.
Note 2 : Bits in AudioOutMask do not represent internal codec node ids as found in detailed codec dumps, but rather the available output nodes as shown e.g. in the OCAU log lines above.
----
类型：plist整数
失败保护：0
描述：表示哪些输出通道用于UEFI声音的位字段。
这通常应该包含一个与内置模拟音频控制器（HDEF）的绿色输出相对应的单一位。每个HDA编解码器的可用输出节点的数量（N）在调试日志中显示（用粗体字标记）。
OCAU: 1/3 PciRoot(0x0)/Pci(0x1,0x0)/Pci(0x0,0x1)/VenMsg(<redacted>,00000000) (4个输出)
OCAU: 2/3 PciRoot(0x0)/Pci(0x3,0x0)/VenMsg(<redacted>,000000) (1个输出)
OCAU: 3/3 PciRoot(0x0)/Pci(0x1B,0x0)/VenMsg(<redacted>,020000) (7个输出)
第一个可用的输出节点是位0（值1），第二个节点是位1（值2），等等。
当使用AudioDxe的调试版本时，那么每个编解码器的每个输出通道的额外信息会在驱动绑定时被记录下来。关于可用输出通道的更多信息也可以从Linux编解码器转储cat /proc/asound/card{n}/codec#{m}中找到。
使用AudioOutMask，可以将声音播放到一个以上的通道（例如，主扬声器加低音扬声器、耳机加扬声器）。例如，如果主扬声器是输出0，低音扬声器是输出2，那么要向这两个通道播放，将AudioOutMask设置为1 << 0 + 1 << 2即5。当所有选择的输出都支持所使用的声音文件格式时，就支持这个功能；如果有任何不支持，就不会有声音播放，并且会记录错误。
注1：如果编解码器上所有可用的输出通道都支持可用的声音文件格式，那么-1的值可以用来同时向所有通道播放。
注2：AudioOutMask中的比特不代表在详细的编解码器转储中发现的内部编解码器节点ID，而是代表可用的输出节点，例如在上面的OCAU日志行中显示。


***DisconnectHda
Type: plist boolean
Failsafe: false
Description: Disconnect HDA controller before loading drivers.
May be required on some systems (e.g. Apple hardware, VMware Fusion guest) to allow a UEFI sound driver (such as AudioDxe) to take control of the audio hardware.
----
类型：plist布尔值
失败保护: false
描述：在加载驱动前断开HDA控制器的连接。
在某些系统上可能需要这样做（例如苹果硬件、VMware Fusion guest），以允许UEFI声音驱动（例如AudioDxe）控制音频硬件。


***PointerPollMin
Type: plist integer
Failsafe: 0
Description: Configure minimal pointer polling period in ms.
This is the minimal period the OpenCore builtin AppleEvent driver polls pointer devices (e.g. mice, trackpads) for motion events. The current implementation defaults to 10 ms. Setting 0 leaves this default unchanged.
Note: The OEM Apple implementation uses a polling rate of 2 ms.
----
类型：plist整数
失败保护：0
描述：配置最小的指针轮询周期（ms）。
这是OpenCore内置的AppleEvent驱动程序对指针设备（例如鼠标、触控板）进行运动事件轮询的最小周期。目前的实施方法默认为10毫秒。设置为0将使这一默认值保持不变。
注意：OEM苹果公司的实现使用2毫秒的轮询率。


***PointerPollMax
Type: plist integer
Failsafe: 0
Description: Configure maximum pointer polling period in ms.
This is the maximum period the OpenCore builtin AppleEvent driver polls pointer devices (e.g. mice, trackpads) for motion events. The period is increased up to this value as long as the devices do not respond in time. The current implementation defaults to 80 ms. Setting 0 leaves this default unchanged.
Certain trackpad drivers often found in Dell laptops can be very slow to respond when no physical movement happens. This can affect OpenCanopy and FileVault 2 user interface responsiveness and loading times. Increasing the polling periods can reduce the impact.
Note: The OEM Apple implementation uses a polling rate of 2 ms.
----
类型：plist整数
失败保护：0
描述：配置最大的指针轮询周期，单位是ms。
这是OpenCore内置的AppleEvent驱动程序对指针设备（如鼠标、触控板）进行运动事件轮询的最长时间。只要设备没有及时响应，该周期就会增加到这个值。目前的实现默认为80ms。设置为0会使这个默认值保持不变。
戴尔笔记本电脑中经常发现的某些触控板驱动程序在没有物理运动发生时可能反应非常慢。这可能会影响OpenCanopy和FileVault 2用户界面的响应能力和加载时间。增加轮询周期可以减少影响。
注意：OEM苹果公司的实现使用2毫秒的轮询率。


***PointerPollMask
Type: plist integer, 32 bit
Failsafe: -1
Description: Configure indices of polled pointers.
Selects pointer devices to poll for AppleEvent motion events. -1 implies all devices. A bit sum is used to determine particular devices. E.g. to enable devices 0, 2, 3 the value will be 1+4+8 (corresponding powers of two). A total of 32 configurable devices is supported.
Certain pointer devices can be present in the firmware even when no corresponding physical devices are available.
These devices usually are placeholders, aggregate devices, or proxies. Gathering information from these devices may result in inaccurate motion activity in the user interfaces and even cause performance issues. Disabling such pointer devices is recommended for laptop setups having issues of this kind.
The amount of pointer devices available in the system can be found in the log. Refer to Found N pointer devices message for more details.
Note: Has no effect when using the OEM Apple implementation (see AppleEvent setting).
----
类型：plist整数，32位
失控保护：-1
描述：配置被轮询的指针的索引。
选择要轮询AppleEvent运动事件的指针设备。-1意味着所有设备。用一个比特的总和来确定特定的设备。例如，要启用设备0、2、3，其值将是1+4+8（相应的2的幂）。总共支持32个可配置的设备。
即使没有相应的物理设备，某些指针设备也可以出现在固件中。
这些设备通常是占位符、聚合设备或代理。从这些设备中收集信息可能导致用户界面中的运动活动不准确，甚至导致性能问题。对于有这种问题的笔记本设置，建议禁用这种指针设备。
系统中可用的指针设备的数量可以在日志中找到。更多细节请参考发现N个指针设备信息。
注意：当使用OEM的苹果实现时没有效果（见AppleEvent设置）。

